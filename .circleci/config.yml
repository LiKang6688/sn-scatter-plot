version: 2

defaults: &defaults
  working_directory: ~/scatter
  # Available images https://hub.docker.com/r/circleci/node/tags/

aliases:
  - &restore_yarn_cache
    name: Restore yarn cache
    keys:
      - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - yarn-packages-{{ .Branch }}
      - yarn-packages-
  - &save_yarn_cache
    name: Save yarn cache
    paths:
      - ~/.cache/yarn
    key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}

jobs:
  install:
    <<: *defaults
    docker:
      - image: circleci/node:10.19.0
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache
      - run:
          name: Setup access to Artifactory
          command: |
            set -euo pipefail
            curl -u $ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD $ARTIFACTORY_URL/api/npm/npm-local/auth/qlik > ~/.npmrc
      - run: yarn install --frozen-lockfile
      - save_cache: *save_yarn_cache

      - store_artifacts:
          path: package.json

      - persist_to_workspace:
          root: ~/scatter
          paths:
            - .

  build:
    <<: *defaults
    docker:
      - image: circleci/node:10.19.0
      - image: qlikcore/engine:12.887.0
        command: -S AcceptEULA=yes
      - image: browserless/chrome:1.44.0-puppeteer-1.20.0
    steps:
      - attach_workspace:
          at: ~/scatter
      - run:
          name: Setup git user
          command: |
            git config user.email "auto-merger@qlik.com"
            git config user.name $GIT_USER
      - run:
          name: Update specs
          command: |
            if [ "$CIRCLE_BRANCH" = "main" ]; then
              yarn run spec
              set +e
              git diff --exit-code --quiet;
              exitstat=$?; set -e;
              if [ $exitstat -eq 0 ]; then
                echo "Specs are up to date";
              else
                echo "Updating API specs";
                git commit -am "docs: update api specs [skip ci]";
                git push -q https://$AUTO_MERGER_ACCESS_TOKEN@github.com/qlik-trial/sn-scatter-plot.git main;
              fi;
            fi
      - run:
          name: Build
          command: yarn run build
      - run:
          name: Lint
          command: yarn run lint
      - run:
          name: Run unit tests and publish to codeclimate
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
            yarn test:unit -- --mocha.bail false
            ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $?
      - store_artifacts:
          path: coverage
      - persist_to_workspace:
          root: ~/scatter
          paths:
            - dist
            - package.json

  publish-dev:
    <<: *defaults
    docker:
      - image: circleci/node:10.19.0
    steps:
      - attach_workspace:
          at: ~/scatter
      - run: mv ./dist sn-scatter-plot && zip -r "sn-scatter-plot.zip" "./sn-scatter-plot"
      - store_artifacts:
          path: ./sn-scatter-plot.zip

  publish:
    <<: *defaults
    docker:
      - image: circleci/node:10.19.0
    steps:
      - attach_workspace:
          at: ~/scatter
      - run:
          name: Setup Artifactory
          command: |
            set -eo pipefail
            # Setup .npmrc to access artifactory for @qlik packages
            curl -u $ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD $ARTIFACTORY_URL/api/npm/npm-local/auth/qlik > ~/.npmrc
      - run:
          name: Publish
          command: |
            set -euo pipefail
            PROJ_VER=v$(cat package.json | jq -r '.version')
            TAG_NAME=$(git tag --points-at HEAD)

            if [ "$TAG_NAME" == "$PROJ_VER" ]
            then
              echo "Running >> npm publish"
              npm publish
            fi

workflows:
  version: 2
  build-all:
    jobs:
      - install
      - build:
          requires:
            - install
      - publish-dev:
          requires:
            - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only:
                - main
